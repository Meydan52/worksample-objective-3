# This is a basic workflow to help you get started with Actions

name: Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Authenticate to AWS 
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Initialise terraform
      - name: Initialize
        run: |
          terraform init

      # Create a workspace or select if exists
      - name: Initialize Workspace
        run: |
          terraform workspace new dev || terraform workspace select dev

      # Allow terraform to make genraed secrets acessible
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      # Run terraform plan 
      - name: Plan Terraform
        run: |
          terraform plan


      # Run terraform apply with the variable file
      - name: Apply Terraform
        run: |
          terraform apply -var-file envs/var.tfvars  -auto-approve

      # Assign iam user keys to envronment variabels
      - name: Insatall AWS CLI
        run: |
          sudo apt-get install python3-setuptools
          python3 -m pip install --user awscli

      # Upload file to s3 bucket using user keys
      - name: Upload to S3
        run: |
          aws configure set aws_access_key_id $(terraform output access_key_id)
          aws configure set aws_secret_access_key $(terraform output secret_access_key)
          aws s3 cp ./testfile2.txt s3://new-test-bucket-for-efuse-01/